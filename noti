local notifications = {}

local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local notificationIndex = 0
local startingX = 10
local startingY = 10
local gap = 30
local notificationColor = Color3.fromRGB(49,49,49)
local notificationFont = Enum.Font.Arial
local activeNotifications = {}

function notifications.notify(text, duration)
	if not player or not player:FindFirstChild("PlayerGui") then return end
	local playerGui = player:FindFirstChild("PlayerGui")
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "NotificationGui"
	screenGui.Parent = playerGui
	local posY = startingY + notificationIndex * gap
	local posX = startingX
	local frame = Instance.new("Frame")
	frame.AnchorPoint = Vector2.new(0,0)
	frame.Size = UDim2.new(0.2,0,0.05,0)
	frame.Position = UDim2.new(0, posX, 0, posY)
	frame.BackgroundColor3 = notificationColor
	frame.BorderSizePixel = 0
	frame.Parent = screenGui
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0,3)
	corner.Parent = frame
	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(1,-10,1,0)
	textLabel.Position = UDim2.new(0,5,0,0)
	textLabel.Text = text
	textLabel.TextColor3 = Color3.fromRGB(255,255,255)
	textLabel.BackgroundTransparency = 1
	textLabel.Font = notificationFont
	textLabel.TextSize = 12
	textLabel.TextWrapped = true
	textLabel.Parent = frame
	local tweenIn = TweenService:Create(frame, TweenInfo.new(0.5,Enum.EasingStyle.Quad,Enum.EasingDirection.Out), {Position = UDim2.new(0, posX, 0, posY), Transparency = 0})
	tweenIn:Play()
	table.insert(activeNotifications, {frame = frame, posY = posY, screenGui = screenGui})
	notificationIndex = notificationIndex + 1
	task.delay(duration or 3, function()
		local tweenOut = TweenService:Create(frame, TweenInfo.new(0.6,Enum.EasingStyle.Quart,Enum.EasingDirection.In), {Transparency = 1})
		tweenOut:Play()
		tweenOut.Completed:Connect(function()
			for i,notif in ipairs(activeNotifications) do
				if notif.frame == frame then
					table.remove(activeNotifications, i)
					break
				end
			end
			for i,notif in ipairs(activeNotifications) do
				local newY = notif.posY - gap
				local tweenSlide = TweenService:Create(notif.frame, TweenInfo.new(0.6,Enum.EasingStyle.Quad,Enum.EasingDirection.Out), {Position = UDim2.new(0, posX, 0, newY)})
				tweenSlide:Play()
				notif.posY = newY
			end
			screenGui:Destroy()
			notificationIndex = notificationIndex - 1
		end)
	end)
end

return notifications